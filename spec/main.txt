[ VERSION: 0.2.3 ]

// RESOURCE: https://www.cs.uic.edu/~jbell/CourseNotes/OperatingSystems/12_FileSystemImplementation.html

CONST MAGIC_LENGTH => 5;
CONST SIGNATURE_LENGTH => ed25519_dalek::SIGNATURE_LENGTH = 64;

>---- HEADER  ----<
MAGIC: [u8; MAGIC_LENGTH] | str
FLAGS: [u8;2] | u16
    0-3 => RESERVED
	 4-15 => ALL BITS HERE ARE FAIR GAME
ARCHIVE_VERSION: [u8;2] | u16
CAPACITY: [u8;2] | u16

FLAGS: [u8;2] | u16, SPECIFIES;
	1 => HAS_SIGNATURES
	2-15 => CUSTOM_DATA

>---- REGISTRY ----<
ENTRIES: (x) * HEADER::CAPACITY
	FLAGS: [u8;2] | u16, SPECIFIES;
		0 => IS_COMPRESSED
		1-3 => RESERVED
		4-15 => CUSTOM_DATA

	CONTENT_VERSION: [u8;1] | u8

	(INDEX|LOCATION): [u8;8] | u64
	(LENGTH|BYTE_OFFSET): [u8;8] | u64 ( SIZE OF BINARY DATA IN BYTES )

	ID_LENGTH: [u8;2] | u16

	# THE SIGNATURE IS ONLY PRESENT IF GLOBAL:: HAS_SIGNATURES == TRUE, UNIMPLEMENTED
	SIGNATURE: [u8; SIGNATURE_LENGTH]

	ID_GLOB: [u8; INFINITE] | MASSIVE

>---- ( BINARY GLOB ) ----<
INCLUDES:
	BINARY_DATA

// LAYERS -> ? OPTIONAL LAYERS
 - SOURCE, ORIGINAL DATA
 ? COMPRESSION, SOURCE IS COMPRESSED
 ? ENCRYPTION, COMPRESSED DATA IS ENCRYPTED
 ? SIGNING, LAST ENDPOINT IS SIGNED
